+------------+---------------+---------------+---------------+---------------+
| ARRAY SIZE |   IMPLICIT    |   EXPLICIT    |   SEDGEWICK   |     KNUTH     |
+------------+---------------+---------------+---------------+---------------+
|      10000 | 0.046 seconds | 0.079 seconds | 0.024 seconds | 0.028 seconds |
|      20000 | 0.079 seconds | 0.232 seconds | 0.053 seconds | 0.079 seconds |
|      50000 | 0.237 seconds | 0.741 seconds | 0.146 seconds | 0.213 seconds |
|     100000 | 0.651 seconds | 1.764 seconds | 0.314 seconds | 0.450 seconds |
|     150000 | 0.790 seconds | 4.235 seconds | 0.507 seconds | 0.813 seconds |
|     200000 | 1.243 seconds | 5.569 seconds | 0.715 seconds | 1.032 seconds |
+------------+---------------+---------------+---------------+---------------+

***QUESTIONS***

Shell's implied gap sequence is faster than the explicit array given. This is because the explicit
array increases by powers of two - which results in the odd numbers (half of the list) not being sorted until the very
last step of the algorithm.

The implied gap sequence starts with a gap of ARRAY_SIZE / 2; and each subsequent gap is half the
preceeding gap's value. Because odd and even gaps are supplied, the implied gap sequence doesn't 
produce the problem presented by the explicit gap sequence.